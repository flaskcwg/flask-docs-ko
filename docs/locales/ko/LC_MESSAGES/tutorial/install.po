# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flask 3.0.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-05-20 15:20-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ko\n"
"Language-Team: ko <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.14.0\n"

#: ../../tutorial/install.rst:2
msgid "Make the Project Installable"
msgstr ""

#: ../../tutorial/install.rst:4
msgid ""
"Making your project installable means that you can build a *wheel* file "
"and install that in another environment, just like you installed Flask in"
" your project's environment. This makes deploying your project the same "
"as installing any other library, so you're using all the standard Python "
"tools to manage everything."
msgstr ""

#: ../../tutorial/install.rst:9
msgid ""
"Installing also comes with other benefits that might not be obvious from "
"the tutorial or as a new Python user, including:"
msgstr ""

#: ../../tutorial/install.rst:12
msgid ""
"Currently, Python and Flask understand how to use the ``flaskr`` package "
"only because you're running from your project's directory. Installing "
"means you can import it no matter where you run from."
msgstr ""

#: ../../tutorial/install.rst:16
msgid ""
"You can manage your project's dependencies just like other packages do, "
"so ``pip install yourproject.whl`` installs them."
msgstr ""

#: ../../tutorial/install.rst:19
msgid ""
"Test tools can isolate your test environment from your development "
"environment."
msgstr ""

#: ../../tutorial/install.rst:23
msgid ""
"This is being introduced late in the tutorial, but in your future "
"projects you should always start with this."
msgstr ""

#: ../../tutorial/install.rst:28
msgid "Describe the Project"
msgstr ""

#: ../../tutorial/install.rst:30
msgid "The ``pyproject.toml`` file describes your project and how to build it."
msgstr ""

#: ../../tutorial/install.rst:32
msgid "``pyproject.toml``"
msgstr ""

#: ../../tutorial/install.rst:47
msgid ""
"See the official `Packaging tutorial <packaging tutorial_>`_ for more "
"explanation of the files and options used."
msgstr ""

#: ../../tutorial/install.rst:54
msgid "Install the Project"
msgstr ""

#: ../../tutorial/install.rst:56
msgid "Use ``pip`` to install your project in the virtual environment."
msgstr ""

#: ../../tutorial/install.rst:62
msgid ""
"This tells pip to find ``pyproject.toml`` in the current directory and "
"install the project in *editable* or *development* mode. Editable mode "
"means that as you make changes to your local code, you'll only need to "
"re-install if you change the metadata about the project, such as its "
"dependencies."
msgstr ""

#: ../../tutorial/install.rst:67
msgid "You can observe that the project is now installed with ``pip list``."
msgstr ""

#: ../../tutorial/install.rst:84
msgid ""
"Nothing changes from how you've been running your project so far. "
"``--app`` is still set to ``flaskr`` and ``flask run`` still runs the "
"application, but you can call it from anywhere, not just the ``flask-"
"tutorial`` directory."
msgstr ""

#: ../../tutorial/install.rst:89
msgid "Continue to :doc:`tests`."
msgstr ""
